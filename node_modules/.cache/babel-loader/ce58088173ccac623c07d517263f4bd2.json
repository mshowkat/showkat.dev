{"ast":null,"code":"var _jsxFileName = \"/home/mhshowkat/workstation/Active projects/Portfolio/src/components/sub/SocialLinks.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport GridList from \"@material-ui/core/GridList/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport { icons } from \"../../vars/projectItems\";\n\nfunction getIcon(url) {\n  var index = 2;\n\n  for (var i = 0; i < icons.length; i++) {\n    if (url.startsWith(icons[i].url)) {\n      index = i;\n      break;\n    }\n  }\n\n  return icons[index].icon;\n}\n\nvar styles = {\n  subHeader: {\n    color: '#212121',\n    fontSize: 18\n  },\n  icon: {\n    color: '#FFF'\n  },\n  divider: {\n    marginBottom: 32\n  },\n  tile: {\n    padding: 16\n  },\n  img: {\n    maxWidth: '100%',\n    maxHeight: '100%',\n    position: 'relative',\n    objectFit: 'contain'\n  }\n};\n\nvar SocialLinks = function SocialLinks(props) {\n  var classes = props.classes,\n      name = props.name,\n      list = props.list,\n      marginTop = props.marginTop;\n  return React.createElement(Paper, {\n    style: {\n      marginTop: marginTop\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cols: 3,\n    style: styles.tile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 3,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    style: styles.subHeader,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, name), React.createElement(Divider, {\n    style: styles.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), list.map(function (tile, index) {\n    return React.createElement(GridListTile, {\n      key: index,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: styles.img,\n      src: tile.logo,\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.title,\n      subtitle: tile.link,\n      actionIcon: React.createElement(IconButton, {\n        style: styles.icon,\n        target: \"_blank\",\n        href: tile.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, tile.link.startsWith('https') ? React.createElement(SvgIcon, {\n        style: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        fill: \"#FFF\",\n        d: \"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })) : null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  })));\n};\n\nSocialLinks.propTypes = {\n  name: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  marginTop: PropTypes.number.isRequired\n};\nexport default withStyles(styles)(SocialLinks);","map":{"version":3,"sources":["/home/mhshowkat/workstation/Active projects/Portfolio/src/components/sub/SocialLinks.js"],"names":["React","withStyles","PropTypes","Paper","GridList","GridListTile","ListSubheader","GridListTileBar","Divider","IconButton","SvgIcon","icons","getIcon","url","index","i","length","startsWith","icon","styles","subHeader","color","fontSize","divider","marginBottom","tile","padding","img","maxWidth","maxHeight","position","objectFit","SocialLinks","props","classes","name","list","marginTop","height","map","logo","title","link","propTypes","string","isRequired","array","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport GridList from \"@material-ui/core/GridList/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport {icons} from \"../../vars/projectItems\";\n\nfunction getIcon(url) {\n    var index = 2;\n    for (var i = 0; i < icons.length; i++) {\n        if (url.startsWith(icons[i].url)) {\n            index = i;\n            break;\n        }\n    }\n    return icons[index].icon;\n}\n\nconst styles = {\n    subHeader: {\n        color: '#212121',\n        fontSize: 18\n    },\n    icon: {\n        color: '#FFF'\n    },\n    divider: {\n        marginBottom: 32\n    },\n    tile: {\n        padding: 16\n    },\n    img: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n        position: 'relative',\n        objectFit: 'contain'\n    },\n};\n\nconst SocialLinks = (props) => {\n    const {classes, name, list, marginTop} = props;\n\n    return (\n        <Paper\n            style={{marginTop: marginTop}}>\n            <GridList cols={3} style={styles.tile}>\n                <GridListTile key=\"Subheader\" cols={3} style={{height: 'auto'}}>\n                    <ListSubheader\n                        style={styles.subHeader}\n                        component=\"div\">{name}</ListSubheader>\n\n                    <Divider style={styles.divider}/>\n\n                </GridListTile>\n\n                {\n                    list.map((tile, index) => (\n                        <GridListTile\n                            key={index}\n                            cols={1}>\n\n                            <img\n                                style={styles.img}\n                                src={tile.logo} alt={tile.title}/>\n\n                            <GridListTileBar\n                                title={tile.title}\n                                subtitle={tile.link}\n                                actionIcon={\n                                    <IconButton style={styles.icon}\n                                                target=\"_blank\"\n                                                href={tile.link}>\n\n                                        {\n                                            tile.link.startsWith('https') ?\n                                                <SvgIcon style={styles.icon}>\n                                                    <path fill=\"#FFF\"\n                                                          d=\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\"/>\n                                                </SvgIcon> : null\n                                        }\n                                    </IconButton>\n                                }/>\n\n                        </GridListTile>\n                    ))\n                }\n\n            </GridList>\n        </Paper>\n    )\n};\n\nSocialLinks.propTypes = {\n    name: PropTypes.string.isRequired,\n    list: PropTypes.array.isRequired,\n    marginTop: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(SocialLinks);"]},"metadata":{},"sourceType":"module"}