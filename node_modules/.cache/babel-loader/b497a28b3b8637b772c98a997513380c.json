{"ast":null,"code":"import _slicedToArray from \"/home/mhshowkat/workstation/Active projects/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mhshowkat/workstation/Active projects/Portfolio/src/components/ClippedDrawer.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { lowerItems, upperItems } from './../vars/drawerItems';\nimport { MemoryRouter } from 'react-router-dom';\nimport Routes from \"./Routes\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport ListItemLink from \"./sub/ListItemLink\";\nimport ListItemLinkShorthand from \"./sub/ListItemLinkShorthand\";\nimport ScrollToTop from \"./ScrollToTop\";\nvar drawerWidth = 240;\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      backgroundColor: '#1DC690'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3\n    },\n    toolbar: theme.mixins.toolbar,\n    lists: {\n      backgroundColor: theme.palette.background.paper\n    },\n    listLink: {\n      textDecoration: 'none'\n    },\n    toolbarText: {\n      flexGrow: 1,\n      color: \"#FFF\"\n    },\n    toolbarIcon: {\n      marginRight: 16\n    },\n    grow: {\n      flexGrow: 1\n    }\n  };\n};\n\nvar routes = ['/', '/skills', '/projects', '/contact'];\n\nfunction ClippedDrawer(props) {\n  var classes = props.classes;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      route = _useState2[0],\n      setRoute = _useState2[1];\n\n  return React.createElement(MemoryRouter, {\n    initialEntries: routes,\n    initialIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ScrollToTop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Showkat\"), React.createElement(IconButton, {\n    href: \"https://github.com/mshowkat\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(SvgIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))))), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.lists,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, upperItems.map(function (item, index) {\n    return React.createElement(ListItemLink, {\n      route: route,\n      index: index,\n      setRoute: setRoute,\n      key: index,\n      to: item.to,\n      primary: item.myName,\n      icon: item.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n  })), React.createElement(Divider, {\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    style: {\n      color: '#212121',\n      margin: 16,\n      fontSize: 18,\n      fontStyle: 'italic'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"My Social Links\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, lowerItems.map(function (item, index) {\n    return React.createElement(ListItemLinkShorthand, {\n      key: index,\n      primary: item.myName,\n      to: item.URL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    });\n  })))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })))));\n}\n\nClippedDrawer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ClippedDrawer);","map":{"version":3,"sources":["/home/mhshowkat/workstation/Active projects/Portfolio/src/components/ClippedDrawer.js"],"names":["React","useState","PropTypes","withStyles","Drawer","AppBar","CssBaseline","Toolbar","List","Divider","lowerItems","upperItems","MemoryRouter","Routes","IconButton","Typography","SvgIcon","ListItemLink","ListItemLinkShorthand","ScrollToTop","drawerWidth","styles","theme","root","display","appBar","zIndex","drawer","backgroundColor","width","flexShrink","drawerPaper","content","flexGrow","padding","spacing","unit","toolbar","mixins","lists","palette","background","paper","listLink","textDecoration","toolbarText","color","toolbarIcon","marginRight","grow","routes","ClippedDrawer","props","classes","route","setRoute","map","item","index","to","myName","icon","marginTop","margin","fontSize","fontStyle","URL","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport {lowerItems, upperItems} from './../vars/drawerItems'\nimport {MemoryRouter} from 'react-router-dom'\nimport Routes from \"./Routes\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport ListItemLink from \"./sub/ListItemLink\";\nimport ListItemLinkShorthand from \"./sub/ListItemLinkShorthand\";\nimport ScrollToTop from \"./ScrollToTop\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: '#1DC690'\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n    toolbar: theme.mixins.toolbar,\n    lists: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    listLink: {\n        textDecoration: 'none'\n    },\n    toolbarText: {\n        flexGrow: 1,\n        color: \"#FFF\"\n    },\n    toolbarIcon: {\n        marginRight: 16\n    },\n    grow: {\n        flexGrow: 1\n    },\n});\n\nconst routes = [\n    '/',\n    '/skills',\n    '/projects',\n    '/contact',\n]\n\nfunction ClippedDrawer(props) {\n    const {classes} = props;\n    const [route, setRoute] = useState(0)\n\n    return (\n        <MemoryRouter\n            initialEntries={routes}\n            initialIndex={0}>\n            <ScrollToTop>\n                <div className={classes.root}>\n                    <CssBaseline/>\n                    <AppBar position=\"fixed\" className={classes.appBar}>\n                        <Toolbar>\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.grow}>\n                                Showkat\n                            </Typography>\n\n                            <IconButton\n                                href=\"https://github.com/mshowkat\"\n                                color=\"inherit\">\n                                <SvgIcon>\n                                    <path\n                                        d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"/>\n                                </SvgIcon>\n                            </IconButton>\n\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                    >\n                        <div className={classes.toolbar}/>\n\n                        <div className={classes.lists}>\n                            <List>\n                                {\n                                    upperItems.map((item, index) => (\n                                        <ListItemLink route={route} index={index} setRoute={setRoute} key={index} to={item.to} primary={item.myName} icon={item.icon}/>\n                                    ))\n                                }\n                            </List>\n                            <Divider style={{marginTop: 16}}/>\n\n                            <Typography style={{color: '#212121', margin: 16, fontSize: 18, fontStyle: 'italic'}}>\n                                My Social Links\n                            </Typography>\n\n                            <Divider/>\n\n                            <List>\n                                {\n                                    lowerItems.map((item, index) => (\n                                        <ListItemLinkShorthand key={index} primary={item.myName} to={item.URL}/>\n                                    ))\n                                }\n                            </List>\n                        </div>\n\n                    </Drawer>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar}/>\n\n                        <Routes/>\n\n                    </main>\n                </div>\n            </ScrollToTop>\n        </MemoryRouter>\n    );\n}\n\nClippedDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ClippedDrawer);"]},"metadata":{},"sourceType":"module"}