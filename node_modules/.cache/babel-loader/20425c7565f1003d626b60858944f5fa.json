{"ast":null,"code":"var _jsxFileName = \"/home/mhshowkat/workstation/Active projects/showkat.dev/src/components/sub/ProjectGridItems.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport GridList from \"@material-ui/core/GridList/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport { icons } from '../../vars/projectItems';\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\n\nfunction getIcon(url) {\n  var index = 0;\n\n  for (var i = 0; i < icons.length; i++) {\n    if (url.match(icons[i].url)) {\n      index = i;\n      break;\n    }\n  }\n\n  return icons[index].icon;\n}\n\nvar styles = {\n  paper: {\n    margin: 0\n  },\n  subHeader: {\n    color: '#212121',\n    fontSize: 18\n  },\n  icon: {\n    color: '#FFF'\n  },\n  divider: {\n    marginBottom: 32\n  },\n  tile: {\n    padding: 16\n  },\n  img: {\n    maxWidth: '100%',\n    maxHeight: '100%',\n    position: 'relative',\n    objectFit: 'contain'\n  }\n};\nvar mtb = [{\n  marginTop: 0,\n  marginBottom: 0\n}, {\n  marginTop: 16,\n  marginBottom: 0\n}, {\n  marginTop: 16,\n  marginBottom: 16\n}];\n\nvar ProjectGridItems = function ProjectGridItems(props) {\n  var classes = props.classes,\n      name = props.name,\n      list = props.list,\n      margins = props.margins;\n  return React.createElement(Paper, {\n    style: mtb[margins],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cols: 4,\n    style: styles.tile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 4,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    style: styles.subHeader,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, name), React.createElement(Divider, {\n    style: styles.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), list.map(function (tile, index) {\n    return React.createElement(GridListTile, {\n      key: index,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: styles.img,\n      src: tile.logo,\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.title,\n      subtitle: tile.subtitle,\n      actionIcon: React.createElement(IconButton, {\n        style: styles.icon,\n        target: \"_blank\",\n        href: tile.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(SvgIcon, {\n        style: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, getIcon(tile.link))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  })));\n};\n\nProjectGridItems.propTypes = {\n  name: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  marginTop: PropTypes.number.isRequired\n};\nexport default withStyles(styles)(ProjectGridItems);","map":{"version":3,"sources":["/home/mhshowkat/workstation/Active projects/showkat.dev/src/components/sub/ProjectGridItems.js"],"names":["React","withStyles","PropTypes","Paper","GridList","GridListTile","ListSubheader","GridListTileBar","IconButton","SvgIcon","icons","Divider","getIcon","url","index","i","length","match","icon","styles","paper","margin","subHeader","color","fontSize","divider","marginBottom","tile","padding","img","maxWidth","maxHeight","position","objectFit","mtb","marginTop","ProjectGridItems","props","classes","name","list","margins","height","map","logo","title","subtitle","link","propTypes","string","isRequired","array","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport GridList from \"@material-ui/core/GridList/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport {icons} from '../../vars/projectItems'\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\n\nfunction getIcon(url) {\n    var index = 0;\n    for (var i = 0; i < icons.length; i++) {\n        if (url.match(icons[i].url)) {\n            index = i;\n            break;\n        }\n    }\n    return icons[index].icon;\n}\n\nconst styles = {\n    paper: {\n        margin: 0\n    },\n    subHeader: {\n        color: '#212121',\n        fontSize: 18\n    },\n    icon: {\n        color: '#FFF'\n    },\n    divider: {\n        marginBottom: 32\n    },\n    tile: {\n        padding: 16\n    },\n    img: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n        position: 'relative',\n        objectFit: 'contain'\n    },\n};\n\nconst mtb = [\n    {\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    {\n        marginTop: 16,\n        marginBottom: 0,\n    },\n    {\n        marginTop: 16,\n        marginBottom: 16,\n    },\n\n]\n\nconst ProjectGridItems = (props) => {\n    const {classes, name, list, margins} = props;\n    return (\n        <Paper\n            style={mtb[margins]}>\n            <GridList cols={4} style={styles.tile}>\n                <GridListTile key=\"Subheader\" cols={4} style={{height: 'auto'}}>\n                    <ListSubheader\n                        style={styles.subHeader}\n                        component=\"div\">{name}</ListSubheader>\n\n                    <Divider style={styles.divider}/>\n\n                </GridListTile>\n\n                {\n                    list.map((tile, index) => (\n                        <GridListTile\n                            key={index}\n                            cols={1}>\n\n                            <img\n                                style={styles.img}\n                                src={tile.logo} alt={tile.title}/>\n\n                            <GridListTileBar\n                                title={tile.title}\n                                subtitle={tile.subtitle}\n                                actionIcon={\n                                    <IconButton style={styles.icon}\n                                                target=\"_blank\"\n                                                href={tile.link}>\n                                        <SvgIcon style={styles.icon}>\n                                            {getIcon(tile.link)}\n                                        </SvgIcon>\n                                    </IconButton>\n                                }/>\n\n                        </GridListTile>\n                    ))\n                }\n\n            </GridList>\n        </Paper>\n    )\n};\n\nProjectGridItems.propTypes = {\n    name: PropTypes.string.isRequired,\n    list: PropTypes.array.isRequired,\n    marginTop: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(ProjectGridItems);"]},"metadata":{},"sourceType":"module"}